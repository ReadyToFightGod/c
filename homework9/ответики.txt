1) Что такое шаблон? В каких случаях применяются шаблоны?
Шаблоны — это функции, которые служат образцом для создания других подобных функций. Главная идея — создание функций без указания точного 
типа некоторых или всех переменных. Для этого мы определяем функцию, указывая тип параметра шаблона, который используется вместо любого 
типа данных. 
Шаблоны используются, чтобы создавать функцию или оператор, которые могла бы работать с любыми типами данных без перегрузки (т.к. 
перегружать вручную неэффективно по времени и затраченным усилиям + привет ошибки при копировании/переписывании кода)

2) Шаблоны чего бывают в C++? Назовите четыре сущности.
 Шаблон класса,  шаблон функции - очевидно
 Шаблон типа - например шаблон матрицы template <typename T> using matrix_t = std::vector<std::vector<T>>;
 Шаблон переменной - например template <typename T> T pi = static_cast<T>(3.1415926);

3) Что такое нетиповой параметр шаблона?
Параметр non-type в шаблоне — это специальный параметр шаблона, который заменяется не типом данных, а конкретным значением. Этим значением может быть: 
целочисленное значение или перечисление; указатель или ссылка на объект классa // функцию // метод класса; std::nullptr_t.
Пример нетипового шаблона можно встретить в стандартной библиотеке С++ — std::array. Когда мы выделяем std::array<int, 5>, то 
int является параметром типа, а 5 — параметром non-type в шаблоне класса.

4) В каких случаях применяется частичная специализация шаблона?
