1) Какие два варианта отношений между родительским и дочерним классом вы можете назвать? 
Дайте краткий комментарий по каждому из них. Какие два варианта наследования им соответствуют?

1 - public (наследование типа is a (==является)) - дочерний класс может использовать все public\protected методы 
родителя
2 - private (наследование is implemented with (==сделан с помощью)) - наш класс использует медоты родителя,
но в полной мере своим родителем не является. Т.е можем использовать родительские функции внутри для своих методов, 
но совсем извне их не вызовем - придется писать геттеры для полей родительского класса (НО писать
надо в дочернем классе)

тип отношений \                     тип полей      
                   public              private     protected
public             public              private     protected
private            private              private     private

2) В каких случаях применяется ключевое слово protected?
Слово protected это дитя слов public и private - оно открывает доступ к членам класса дружественным и дочерним классам 
(т.е если изменится protected-член, то придется менять все как в родительском, так и во все дочерних классах). Поэтому
protected используют чаще всего тогда, когда наследуются только свои же классы и количество дочерних классов будет небольшое
(чтобы обновления полей не занимало много времени, так как дочерних классов будет немного).

3) Для чего нужны ключевые слова virtual, override, final?

4) Что такое чистая виртуальная функция и абстрактный базовый класс?

5) Какие проблемы связаны с множественным наследованием? Как они решены в языке Java?
